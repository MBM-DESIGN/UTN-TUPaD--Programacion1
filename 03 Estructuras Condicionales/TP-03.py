# Pr√°ctico 3: Estructuras condicionales

# 1.Programa para verificar la mayor√≠a de edad

# Solicitar la edad al usuario
edad = int(input("Por favor, ingresa tu edad: ")) 
# Verificar si es mayor de 18 a√±os
if edad > 18:
    print("Sos mayor de edad")
print ("-" * 40)

# 2.Programa para evaluar si una nota est√° aprobada

# Solicitar la nota al usuario
nota = int(input("Por favor, ingresa tu nota (en n√∫mero entero): "))
# Evaluar si est√° aprobada o desaprobada
if nota >= 6:
    print("Aprobado")
else:
    print("Desaprobado")
print ("-" * 40)

# 3.Programa para verificar n√∫meros pares usando el operador de m√≥dulo (%)

# Solicitar un n√∫mero al usuario
numero = int(input("Por favor, ingresa un n√∫mero: "))
# Verificar si el n√∫mero es par usando el operador de m√≥dulo
if numero % 2 == 0:
    print("Has ingresado un n√∫mero par")
else:
    print("Por favor, ingres√° un n√∫mero par")
print ("-" * 40)

# 4.Programa para clasificar a las personas por categor√≠as de edad

# Solicitar la edad al usuario
edad = int(input("Por favor, ingresa tu edad: "))
# Clasificar por categor√≠as usando if-elif-else
if edad < 12:
    print("Ni√±o/a")
elif edad >= 12 and edad < 18:
    print("Adolescente")
elif edad >= 18 and edad < 30:
    print("Adulto/a joven")
else:
    print("Adulto/a")
print ("-" * 40)

# 5.Programa para validar la longitud de una contrase√±a usando la funci√≥n len()

# Solicitar la contrase√±a al usuario
contrase√±a = input("Por favor, ingres√° una contrase√±a (que contenga entre 8 y 14 caracteres): ")
# Validar la longitud usando la funci√≥n len()
if len(contrase√±a) >= 8 and len(contrase√±a) <= 14:
    print("Has ingresado una contrase√±a correcta")
else:
    print("Por favor, ingres√° una contrase√±a entre 8 y 14 caracteres")
print ("-" * 40)

# 6.Programa con par√°metros estad√≠sticos de: moda (mode), mediana (median) y media (mean); para predecir el patr√≥n de distribuci√≥n

# Importar las librer√≠as necesarias
import random
from statistics import mode, median, mean
# Generar lista de 50 n√∫meros aleatorios entre 1 y 100
numeros_aleatorios = [random.randint(1, 100) for i in range(50)]
# Calcular las medidas estad√≠sticas
try:
    moda = mode(numeros_aleatorios)
    mediana = median(numeros_aleatorios)
    media = mean(numeros_aleatorios)
    # Mostrar los valores calculados
    print("N√∫meros aleatorios generados:", numeros_aleatorios)
    print(f"\nMedidas estad√≠sticas:")
    print(f"Media: {media:.2f}")
    print(f"Mediana: {mediana}")
    print(f"Moda: {moda}")
    # Determinar el tipo de sesgo
    print(f"\nAn√°lisis del sesgo:")
    if media > mediana > moda:
        print("Resultado: Sesgo positivo o a la derecha")
        print("(Media > Mediana > Moda)")
    elif media < mediana < moda:
        print("Resultado: Sesgo negativo o a la izquierda")
        print("(Media < Mediana < Moda)")
    elif media == mediana == moda:
        print("Resultado: Sin sesgo")
        print("(Media = Mediana = Moda)")
    else:
        print("Resultado: Distribuci√≥n sin un patr√≥n de sesgo claro")
        print("(No cumple exactamente con los criterios de sesgo definidos)")
except Exception as e:
    print(f"Error al calcular las medidas estad√≠sticas: {e}")
    print("Esto puede deberse a:")
    print("- No hay valores repetidos (problema con la moda)")
    print("- Lista vac√≠a o con datos inv√°lidos")
print ("-" * 40)

# 7.Programa que a√±ade el signo de exclamaci√≥n si el string termina en vocal

# Solicitar una frase o palabra al usuario
texto = input("Por favor, ingres√° una frase o palabra: ")
# Definir las vocales (incluye may√∫sculas y min√∫sculas)
vocales = "aeiouAEIOU"
# Verificar si el texto termina en vocal
if len(texto) > 0 and texto[-1] in vocales:
    # Si termina en vocal, a√±adir un signo de exclamaci√≥n al final
    texto_resultado = texto + "!"
    print(texto_resultado)
else:
    # Si no termina en vocal, imprimir lo ingresado tal como est√°
    print(texto)
print ("-" * 40)

# 8.Programa para transformar nombres usando las funciones: upper(), lower() y title()

# Solicitar el nombre al usuario
nombre = input("Por favor, ingres√° tu nombre: ")
# Mostrar las opciones disponibles
print("\nSeleccion√° una opci√≥n:")
print("1. Nombre en may√∫sculas")
print("2. Nombre en min√∫sculas")  
print("3. Nombre con primera letra may√∫scula")
# Solicitar la opci√≥n deseada
opcion = input("\nIngres√° el n√∫mero de opci√≥n (1, 2 o 3): ")
# Transformar el nombre seg√∫n la opci√≥n seleccionada
if opcion == "1":
    nombre_transformado = nombre.upper()
    print(f"\nResultado: {nombre_transformado}")
elif opcion == "2":
    nombre_transformado = nombre.lower()
    print(f"\nResultado: {nombre_transformado}")
elif opcion == "3":
    nombre_transformado = nombre.title()
    print(f"\nResultado: {nombre_transformado}")
else:
    print("\nOpci√≥n no v√°lida. Por favor, seleccion√° 1, 2 o 3.")
print ("-" * 40)

# 9.Programa para clasificar terremotos seg√∫n la escala de Richter

# Pedir al usuario la magnitud del terremoto
magnitud = float(input("Ingrese la magnitud del terremoto: "))
# Clasificar seg√∫n la escala de Richter
if magnitud < 3:
    clasificacion = "Muy leve (imperceptible)"
elif magnitud < 4:
    clasificacion = "Leve (ligeramente perceptible)"
elif magnitud < 5:
    clasificacion = "Moderado (sentido por personas, pero generalmente no causa da√±os)"
elif magnitud < 6:
    clasificacion = "Fuerte (puede causar da√±os en estructuras d√©biles)"
elif magnitud < 7:
    clasificacion = "Muy Fuerte (puede causar da√±os significativos)"
else:
    clasificacion = "Extremo (puede causar graves da√±os a gran escala)"
# Imprimir el resultado
print(f"Clasificaci√≥n: {clasificacion}")
print ("-" * 40)

# 10.Programa para determinar la estaci√≥n del a√±o

# Le pedimos al usuario que ingrese su hemisferio, el mes y el d√≠a.
# Usamos .upper() para convertir la letra del hemisferio a may√∫scula y evitar errores.
# Usamos int() para convertir el mes y el d√≠a a n√∫meros enteros.
print("¬°Averig√ºemos en qu√© estaci√≥n del a√±o est√°s!")
hemisferio = input("¬øEn qu√© hemisferio te encontr√°s? (N para Norte / S para Sur): ").upper()
mes = int(input("Ingres√° el n√∫mero del mes actual (por ejemplo, 9 para septiembre): "))
dia = int(input("Ingresa el d√≠a actual: "))
# Creamos una variable para guardar la estaci√≥n y la dejamos vac√≠a.
estacion = ""
# Usamos estructuras condicionales para ver en qu√© rango de fechas estamos.
# Primer rango: del 21 de diciembre al 20 de marzo.
if (mes == 12 and dia >= 21) or (mes == 1) or (mes == 2) or (mes == 3 and dia <= 20):
    if hemisferio == 'N':
        estacion = "Invierno ‚ùÑÔ∏è"
    elif hemisferio == 'S':
        estacion = "Verano ‚òÄÔ∏è"
# Segundo rango: del 21 de marzo al 20 de junio.
elif (mes == 3 and dia >= 21) or (mes == 4) or (mes == 5) or (mes == 6 and dia <= 20):
    if hemisferio == 'N':
        estacion = "Primavera üå∏"
    elif hemisferio == 'S':
        estacion = "Oto√±o üçÇ"
# Tercer rango: del 21 de junio al 20 de septiembre.
elif (mes == 6 and dia >= 21) or (mes == 7) or (mes == 8) or (mes == 9 and dia <= 20):
    if hemisferio == 'N':
        estacion = "Verano ‚òÄÔ∏è"
    elif hemisferio == 'S':
        estacion = "Invierno ‚ùÑÔ∏è"
# Cuarto rango: del 21 de septiembre al 20 de diciembre.
elif (mes == 9 and dia >= 21) or (mes == 10) or (mes == 11) or (mes == 12 and dia <= 20):
    if hemisferio == 'N':
        estacion = "Oto√±o üçÇ"
    elif hemisferio == 'S':
        estacion = "Primavera üå∏"
# Si la variable 'estacion' tiene un valor, lo imprimimos por pantalla.
# Si no, es porque el usuario ingres√≥ datos incorrectos.
if estacion:
    print(f"\n¬°Seg√∫n los datos que ingresaste, te encuentras en {estacion} !")
else:
    print("\nLos datos ingresados no son correctos. Por favor, intenta de nuevo.")
print ("-" * 40)

